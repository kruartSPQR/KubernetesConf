{{- if .Values.db4.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: db4-mongo
  namespace: {{ .Values.global.namespace | quote }}
  labels:
    app: mongo
    instance: db4
spec:
  serviceName: "db4"
  replicas: {{.Values.db4.replicaCount}}
  selector:
    matchLabels:
      app: mongo
      instance: db4
  template:
    metadata:
      labels:
        app: mongo
        instance: db4
    spec:
      containers:
        - name: db4
          image: mongo:latest
          ports:
            - containerPort: 27017
              protocol: TCP
          env:
            - name: MONGO_INITDB_DATABASE
              value: {{ .Values.db4.database | quote }}
            - name: MONGO_INITDB_ROOT_USERNAME
              value: {{ .Values.db4.username | quote }}
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mongo-secrets
                  key: mongo-password
          livenessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping')
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - mongosh
                - --eval
                - db.adminCommand('ping')
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
          volumeMounts:
            - name: mongo-data
              mountPath: /data/db
  volumeClaimTemplates:
      - metadata:
          name: mongo-data
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: {{ .Values.db4.storage | quote }}
{{- end }}